package testsuite;

import io.qameta.allure.*;
import io.restassured.response.Response;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;

import static io.restassured.RestAssured.given;

public class VulnerabilityScanTest {

    @Test
    @Owner("JBGroup")
    @Epic("Vulnerability")
    @Feature("Seguridad")
    @Story("Scanner")
    @Order(2)
    @DisplayName("Realizar el escaneio de vulnerabilidades con ZAP")
    @Description("Realizar el escaneio de vulnerabilidades con ZAP")
    @Link(name = "Test Case Manual", url =" jira.com/123123123")
    @Issue("DEF12345")
    @Severity(SeverityLevel.CRITICAL)
    public void startVulnerability() throws InterruptedException {
        String scanId = initScanner();
        waitUntilScannerIsRunning(scanId);
    }

    @AfterEach
    public void generateReport(){
        // reporte owasp zap
        Response response = given()
                .log().all().
                when()
                .get("http://localhost:9091/OTHER/core/other/htmlreport/");
        response.then()
                .log().all();

        attachHTML("Reporte OWASP ZAP",response.getBody().asString());
    }

    @Attachment(value = "{0}" , type = "text/html")
    public String attachHTML(String name, String content) {
        return content;
    }

    @Step("Espera hasta que el escaneo este en 100%")
    private static void waitUntilScannerIsRunning(String scanId) throws InterruptedException {
        Response response;
        // esperar hasta que este en 100%
        String status = "0";
        do {
            Thread.sleep(10000);
            response = given()
                    .queryParam("scanId", scanId)
                    .log().all().
                    when()
                    .get("http://localhost:9091/JSON/ascan/view/status/");
            response.then()
                    .log().all();
            status = response.then().extract().path("status");
            System.out.println("Porcentaje actual: ["+status+"%]");
        }while (!status.equals("100"));
        System.out.println("termino la ejecucion, status: ["+status+"%]");
    }

    @Step("Iniciar el escaneo usando owasp zap")
    private static String initScanner() {
        // inicia escaneo
        Response response = given()
                .queryParam("url","https://todo.ly")
                .log().all().
        when()
                .get("http://localhost:9091/JSON/ascan/action/scan/");
        response.then()
                .log().all();
        String scanId = response.then().extract().path("scan");
        System.out.println(" ID SCAN: "+scanId);
        return scanId;
    }
}

